
// 1. Strings!
//console.log('Task 1. Strings');

 let myString = "hello,this,is,a,difficult,to,read,sentence";

//the string 
console.log("String:", myString);


// Log the length of myString
console.log("Length of myString:", myString.length);

// Remove commas and replace with spaces
let modifiedString = myString.replace(/,/g, ' ');

// Log the modified string
console.log("Mytring:", modifiedString);



// Log the original and modified strings
console.log("String:", myString);
console.log("Mystring:", modifiedString);

// 2. Arrays
// console.log('Task 2. Arrays');


let favoriteAnimals = ["blowfish", "capricorn", "giraffe"];

// Add Mauro's favorite animal 'turtle' to the array
favoriteAnimals.push("turtle");
console.log("Favorite animals array:", favoriteAnimals);

// Add Jim's favorite animal 'meerkat' after 'blowfish' and before 'capricorn'
favoriteAnimals.splice(index + 1, 0, "meerkat");
console.log("favorite animals array:", favoriteAnimals);

// Log the length of the array with a message
console.log("The array has a length of:", favoriteAnimals.length);

favoriteAnimals.splice(3, 1);
console.log(`Let's see the new array: ${favoriteAnimals}`);

let elementIndex = favoriteAnimals.indexOf('meerkat');
console.log(`The item you are looking for is at index: ${elementIndex}`);


// More JavaScript 
// 1. Create a function that takes 3 arguments and returns the sum of the these arguments.

function sumOfThreeNumbers(a, b, c) {
  return a + b + c;
}

// Example usage:
let result = sumOfThreeNumbers(2, 5, 8);
console.log("The sum of the three numbers is:", result);

// 2. Create a function named colorCar that receives a color, and prints out, 'a red car' for example.


function colorCar(color) {
  console.log(`A ${color} car`);
}

// Example usage:
colorCar("red");

// 3. Certainly! Here's an example of an object and a function that takes the object as a parameter and prints out all its properties and values:
// Example object
let car = {
  make: "Toyota",
  model: "Camry",
  year: 2022,
  color: "blue"
};

// Function that prints properties and values of an object
function printObjectProperties(obj) {
  for (let key in obj) {
    if (obj.hasOwnProperty(key)) {
      console.log(`${key}: ${obj[key]}`);
    }
  }
}

// Example usage
printObjectProperties(car);

// 4. Create a function named vehicleType that receives a color, and a code, 1 for car, 2 for motorbike. And prints 'a blue motorbike' for example when called as vehicleType("blue", 2)


function vehicleType(color, code) {
  let type = code === 1 ? "car" : code === 2 ? "motorbike" : "unknown";
  console.log(`A ${color} ${type}`);
}

// Example usage:
vehicleType("blue", 2);

// 5. Can you write the following without the if statement, but with just as a single line with console.log(...);?
console.log(3 === 3 ? "yes" : "no");

// 6.Create a function called vehicle, like before, but takes another parameter called age, so that vehicle("blue", 1, 5) prints 'a blue used car'

function vehicle(color, code, age) {
  const vehicleType = code === 1 ? "car" : code === 2 ? "motorbike" : "blue";
  const condition = age > 0 ? "used" : "new";
  console.log(`A ${color} ${condition} ${vehicleType}`);
}

// 7. Make a list of vehicles, you can add "motorbike", "caravan", "bike", or more.

const vehicles = ["motorbike", "car", "caravan", "bike", "truck", "bus"];

// 8. How do you get the third element from that list?
const thirdVehicle = vehicles[2];
console.log(thirdVehicle);  

// 9. Change the function vehicle to use the list of question 7. So that vehicle("green", 3, 1) prints "a green new bike".

function vehicleNew(color,code,age){
    if (age < 0 || typeof(age) !== 'number'){
        console.log('Age has to be a number >= 0');
    }else{        
        let message = `a ${color} `;
        if (age === 0) {
            message += 'new';
        }else{
            message += 'used'
        };

        message = (vehicles[code - 1] === undefined)
         ? `Choose number from 1 to ${vehicles.length} for vehicle type` 
         : message + ` ${vehicles[code - 1]}`;
        console.log(message)  
    }
}
    
vehicleNew('blue',1,5);
vehicleNew('red',3,0);
vehicleNew('red',5,0); //if incorrect type code


// 10. Use the list of vehicles to write an advertisement. So that it prints something like: "Amazing Joe's Garage, we service cars, motorbikes, caravans and bikes.". (Hint: use a for loop.) 
function createAdvertisement(vehicleType) {
    let advertisement = "Amazing Joe's Garage, we service ";
    
    for (let i = 0; i < vehicles.length; i++) {
        if (i === vehicles.length - 1) {
            advertisement += `and ${vehicles[i]}s.`;
        } else {
            advertisement += `${vehicles[i]}s, `;
        }
    }

    console.log(advertisement);
}
createAdvertisement();

// 11. What if you add one more vehicle to the list, can you have that added to the advertisement without changing the code for question 10?

vehicles.push("scooter");

// Call the function to create and log the updated advertisement
createAdvertisement();

// 12.Create an empty object.

let emptyObject = {};

// 13. Create an object that contains the teachers that you have had so far for the different modules.
let teachers = {
    modul1: ['Tara','Sami'],
    modul2: 'Sarah'
};

printObject(teachers);

// 14. Add a property to the object you just created that contains the languages that they have taught you.

teachers.languages = ['html', 'css', 'js'];
printObject(teachers);

// 15. Write some code to test two arrays for equality using == and ===. Test the following:
let x = [1, 2, 3];
let y = [1, 2, 3];
let z = y;

function compareArrays(ar1,ar2){     //for equality using ===
    let result = ar1.length === ar2.length;
    if (result) {
        for (let i=0; i < ar1.length; i++){
            if (ar1[i] !== ar2[i]){
                result = false;
                break;
            }
        }
    }
    return result;
}

console.log(compareArrays(x,y));
console.log(compareArrays(x,z));



// 16. Take a look at the following code:
let o1 = { foo: "bar" };
let o2 = { foo: "bar" };
let o3 = o2;
console.log(o1)
console.log(o2)
console.log(o3)
//change o2 to baz
o2.foo = "baz";
console.log(o2); // { foo: "baz" }
console.log(o3); // { foo: "baz" }
// Changing o1
o1.foo = "qux";
console.log(o1); // { foo: "qux" }
console.log(o3); // { foo: "baz" }

// 17.What does the following code return? (And why?)

let bar = 42;
typeof bar;
typeof typeof bar;
//it looks like typeof can be used for giving only two results, the value inside the string, and the string itself
typeof typeof typeof typeof bar;
bar = [42];
typeof bar;
typeof typeof bar;









